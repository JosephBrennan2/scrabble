(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    137568,       3158]
NotebookOptionsPosition[    135983,       3124]
NotebookOutlinePosition[    136419,       3141]
CellTagsIndexPosition[    136376,       3138]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Scrabbology`"}]}], "Input",
 CellChangeTimes->{{3.963566506857649*^9, 3.9635665110966854`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"c0a6827c-e0b2-4741-989f-68f86240c026"],

Cell[CellGroupData[{

Cell["Check for Perfection", "Subsection",
 CellChangeTimes->{{3.9434248664929504`*^9, 3.94342487092276*^9}, {
  3.9434285597233067`*^9, 
  3.943428567258299*^9}},ExpressionUUID->"cc15eb46-193e-b04d-a4d4-\
3dc1fe725c6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"store", "=", 
   RowBox[{"CloudGet", "[", "\"\<PerfectScrabbleGames\>\"", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"0403f5d4-887d-ba46-afef-59de7e591bfc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"game", "=", 
   RowBox[{"RandomChoice", "[", "store", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"board", "=", 
   RowBox[{"CreateInitialScrabbleBoard", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"board", ",", 
   RowBox[{"Epilog", "->", 
    RowBox[{"GameToEpilog", "[", "game", "]"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"PerfectScrabbleGameQ", "[", "game", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "[", "game", "]"}]}], "Input",
 CellChangeTimes->{{3.9434278351517143`*^9, 3.9434278437603626`*^9}, {
  3.943428496210535*^9, 3.9434285134659157`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"3a491659-c889-8142-ab4d-3a1c30eaced4"],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDgh2IQGwI+2DPgAKFg8BRDHpc4qnkIc0k1B7s49dxJW/eT
6k6Y+gcUux+/vzDdNzTMp3X40Cv8iU9XpKofKP9Sx52DL/yHdngOvvAf2u5B
B0Ot/Bwu5tMuX5Bq/mBzD/58hAkGV/gPlfJ/qIQn6eYPNveQZz66PaPm08v8
wZbfh4p7UO0fbT8PDncOvvAkVf3g8u/o+AZ+cVLDZ6i0Q4bueB0AdOt7Xg==

    "], {{0, 0}, {15, 15}}, {0, 1}], {
    {GrayLevel[0], 
     StyleBox[
      LineBox[{{{0, 15}, {15, 15}}, {{0, 14}, {15, 14}}, {{0, 13}, {15, 
       13}}, {{0, 12}, {15, 12}}, {{0, 11}, {15, 11}}, {{0, 10}, {15, 10}}, {{
       0, 9}, {15, 9}}, {{0, 8}, {15, 8}}, {{0, 7}, {15, 7}}, {{0, 6}, {15, 
       6}}, {{0, 5}, {15, 5}}, {{0, 4}, {15, 4}}, {{0, 3}, {15, 3}}, {{0, 
       2}, {15, 2}}, {{0, 1}, {15, 1}}, {{0, 0}, {15, 0}}}],
      Antialiasing->False]}, 
    {GrayLevel[0], 
     StyleBox[
      LineBox[{{{0, 0}, {0, 15}}, {{1, 0}, {1, 15}}, {{2, 0}, {2, 15}}, {{3, 
       0}, {3, 15}}, {{4, 0}, {4, 15}}, {{5, 0}, {5, 15}}, {{6, 0}, {6, 
       15}}, {{7, 0}, {7, 15}}, {{8, 0}, {8, 15}}, {{9, 0}, {9, 15}}, {{10, 
       0}, {10, 15}}, {{11, 0}, {11, 15}}, {{12, 0}, {12, 15}}, {{13, 0}, {13,
        15}}, {{14, 0}, {14, 15}}, {{15, 0}, {15, 15}}}],
      Antialiasing->False]}}},
  Epilog->{{{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{1, 8}, {2, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"S\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      1.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{2, 8}, {3, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"H\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      2.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{3, 8}, {4, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"R\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      3.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{4, 8}, {5, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"I\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      4.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{5, 8}, {6, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"K\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      5.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{6, 8}, {7, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      6.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 8}, {8, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"S\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{5, 15}, {6, 14}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"H\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      5.5, 14.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{5, 14}, {6, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"O\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      5.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{5, 13}, {6, 12}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"W\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      5.5, 12.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{5, 12}, {6, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"L\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      5.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{5, 11}, {6, 10}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"B\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      5.5, 10.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{5, 10}, {6, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"A\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      5.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{5, 9}, {6, 8}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"C\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      5.5, 8.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{5, 8}, {6, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"K\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      5.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{4, 8}, {5, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"I\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      4.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{4, 7}, {5, 6}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"N\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      4.5, 6.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{4, 6}, {5, 5}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"P\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      4.5, 5.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{4, 5}, {5, 4}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"O\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      4.5, 4.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{4, 4}, {5, 3}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"U\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      4.5, 3.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{4, 3}, {5, 2}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"R\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      4.5, 2.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{4, 2}, {5, 1}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      4.5, 1.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{4, 1}, {5, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"D\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      4.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{1, 15}, {2, 14}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"R\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      1.5, 14.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{1, 14}, {2, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"O\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      1.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{1, 13}, {2, 12}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"B\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      1.5, 12.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{1, 12}, {2, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"O\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      1.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{1, 11}, {2, 10}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"T\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      1.5, 10.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{1, 10}, {2, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"I\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      1.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{1, 9}, {2, 8}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"C\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      1.5, 8.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{1, 8}, {2, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"S\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      1.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 15}, {8, 14}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"Q\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 14.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 14}, {8, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"U\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 13}, {8, 12}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"I\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 12.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 12}, {8, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"N\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 11}, {8, 10}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"O\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 10.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 10}, {8, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"N\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 9}, {8, 8}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 8.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 8}, {8, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"S\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{6, 8}, {7, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      6.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{6, 7}, {7, 6}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"L\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      6.5, 6.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{6, 6}, {7, 5}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"Y\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      6.5, 5.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{6, 5}, {7, 4}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"T\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      6.5, 4.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{6, 4}, {7, 3}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"R\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      6.5, 3.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{6, 3}, {7, 2}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"O\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      6.5, 2.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{6, 2}, {7, 1}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"I\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      6.5, 1.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{6, 1}, {7, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"D\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      6.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 14}, {8, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"U\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{8, 14}, {9, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"N\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      8.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{9, 14}, {10, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"T\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      9.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 14}, {11, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"A\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{11, 14}, {12, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"X\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      11.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{12, 14}, {13, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"I\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      12.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{13, 14}, {14, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"N\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      13.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 14}, {15, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"G\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 12}, {8, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"N\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{8, 12}, {9, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"O\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      8.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{9, 12}, {10, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"N\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      9.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 12}, {11, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"L\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{11, 12}, {12, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      11.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{12, 12}, {13, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"V\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      12.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{13, 12}, {14, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      13.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 12}, {15, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"L\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{2, 8}, {3, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"H\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      2.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{2, 7}, {3, 6}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"U\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      2.5, 6.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{2, 6}, {3, 5}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"M\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      2.5, 5.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{2, 5}, {3, 4}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"I\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      2.5, 4.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{2, 4}, {3, 3}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"D\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      2.5, 3.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{2, 3}, {3, 2}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"I\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      2.5, 2.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{2, 2}, {3, 1}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"F\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      2.5, 1.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{2, 1}, {3, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"Y\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      2.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 10}, {8, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"N\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{8, 10}, {9, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"A\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      8.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{9, 10}, {10, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"R\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      9.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 10}, {11, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"T\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{11, 10}, {12, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"J\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      11.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{12, 10}, {13, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"I\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      12.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{13, 10}, {14, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      13.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 10}, {15, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"S\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{3, 15}, {4, 14}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"O\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      3.5, 14.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{3, 14}, {4, 13}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"V\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      3.5, 13.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{3, 13}, {4, 12}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      3.5, 12.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{3, 12}, {4, 11}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"R\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      3.5, 11.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{3, 11}, {4, 10}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"F\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      3.5, 10.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{3, 10}, {4, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      3.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{3, 9}, {4, 8}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"A\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      3.5, 8.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{3, 8}, {4, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"R\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      3.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{6, 1}, {7, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"D\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      6.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{7, 1}, {8, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"I\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      7.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{8, 1}, {9, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"A\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      8.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{9, 1}, {10, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"Z\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      9.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 1}, {11, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{11, 1}, {12, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"P\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      11.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{12, 1}, {13, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"A\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      12.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{13, 1}, {14, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"M\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      13.5, 0.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 10}, {15, 9}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"S\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 9.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 9}, {15, 8}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"A\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 8.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 8}, {15, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"G\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 7}, {15, 6}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"G\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 6.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 6}, {15, 5}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 5.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 5}, {15, 4}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"R\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 4.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 4}, {15, 3}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 3.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{14, 3}, {15, 2}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"D\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      14.5, 2.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 8}, {11, 7}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"S\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 7.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 7}, {11, 6}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"A\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 6.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 6}, {11, 5}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"T\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 5.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 5}, {11, 4}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"U\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 4.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 4}, {11, 3}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"R\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 3.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 3}, {11, 2}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"A\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 2.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 2}, {11, 1}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"T\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 1.5}]}, {{
      RGBColor[1, 1, 0.85], 
      EdgeForm[
       Thickness[Tiny]], 
      RectangleBox[{10, 1}, {11, 0}, RoundingRadius -> 0.2]}, 
     InsetBox[
      FormBox[
       StyleBox["\"E\"", 16, Bold, StripOnInput -> False], TraditionalForm], {
      10.5, 0.5}]}},
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.9434278455906906`*^9, 3.9434284592053623`*^9, 
  3.9434285155041733`*^9, 3.9635665287095776`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"f00544a4-d398-ce4d-962b-1a19b25b93bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", 
   TagBox[GridBox[{
      {"\<\"Blanks:\"\>", 
       RowBox[{"{", 
        RowBox[{"\<\"R\"\>", ",", "\<\"R\"\>"}], "}"}]},
      {"\<\" Leftovers:\"\>", 
       RowBox[{"{", 
        RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>"}], "}"}]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]}], "}"}]], "Output",
 CellChangeTimes->{3.9434278455906906`*^9, 3.9434284592053623`*^9, 
  3.9434285155041733`*^9, 3.963566528763588*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"087c2c2d-017f-2442-bb7f-95fb25817cea"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      1 -> <|"Bingo" -> "SHRIKES", "Position" -> {"H", 2}, "Direction" -> 
         "Right"|>, 
       2 -> <|"Bingo" -> "HOWLBACK", "Position" -> {"A", 6}, "Direction" -> 
         "Down", "Overlap" -> "K"|>, 
       3 -> <|"Bingo" -> "INPOURED", "Position" -> {"H", 5}, "Direction" -> 
         "Down", "Overlap" -> "I"|>, 
       4 -> <|"Bingo" -> "ROBOTICS", "Position" -> {"A", 2}, "Direction" -> 
         "Down", "Overlap" -> "S"|>, 
       5 -> <|"Bingo" -> "QUINONES", "Position" -> {"A", 8}, "Direction" -> 
         "Down", "Overlap" -> "S"|>, 
       6 -> <|"Bingo" -> "ELYTROID", "Position" -> {"H", 7}, "Direction" -> 
         "Down", "Overlap" -> "E"|>, 
       7 -> <|"Bingo" -> "UNTAXING", "Position" -> {"B", 8}, "Direction" -> 
         "Right", "Overlap" -> "U"|>, 
       8 -> <|"Bingo" -> "NONLEVEL", "Position" -> {"D", 8}, "Direction" -> 
         "Right", "Overlap" -> "N"|>, 
       9 -> <|"Bingo" -> "HUMIDIFY", "Position" -> {"H", 3}, "Direction" -> 
         "Down", "Overlap" -> "H"|>, 
       10 -> <|"Bingo" -> "NARTJIES", "Position" -> {"F", 8}, "Direction" -> 
         "Right", "Overlap" -> "N"|>, 
       11 -> <|"Bingo" -> "OVERFEAR", "Position" -> {"A", 4}, "Direction" -> 
         "Down", "Overlap" -> "R"|>, 
       12 -> <|"Bingo" -> "DIAZEPAM", "Position" -> {"O", 7}, "Direction" -> 
         "Right", "Overlap" -> "D"|>, 
       13 -> <|"Bingo" -> "SAGGERED", "Position" -> {"F", 15}, "Direction" -> 
         "Down", "Overlap" -> "S"|>, 
       14 -> <|"Bingo" -> "SATURATE", "Position" -> {"H", 11}, "Direction" -> 
         "Down", "Overlap" -> "E"|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "Bingo"} -> 
        1, {All, "Position"} -> 2, {All, "Direction"} -> 1, {All, "Overlap"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Bingo" -> TypeSystem`PackageScope`AtomShape[89.60000000000001], 
             "Position" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[{
                 TypeSystem`PackageScope`AtomShape[33.6], 
                 TypeSystem`PackageScope`AtomShape[34]}], 
               DirectedInfinity[1], 2, {All, "Position"}], "Direction" -> 
             TypeSystem`PackageScope`AtomShape[56.00000000000001], "Overlap" -> 
             TypeSystem`PackageScope`AtomShape[33.6]|>], 
           DirectedInfinity[1], 4, {All}]]], 14, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"Bingo", "Position", "Direction", "Overlap"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Tuple[{
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer]}], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 14], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, 
          TypeSystem`PackageScope`KeyDummy[0]} -> 1, {All, "Bingo"} -> 
        1, {All, "Position"} -> 2, {All, "Direction"} -> 1, {All, "Overlap"} -> 
        1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[34], 
          TypeSystem`PackageScope`Limited[
           
           TypeSystem`PackageScope`RowShape[<|
            "Bingo" -> TypeSystem`PackageScope`AtomShape[89.60000000000001], 
             "Position" -> TypeSystem`PackageScope`Limited[
               TypeSystem`PackageScope`RowShape[{
                 TypeSystem`PackageScope`AtomShape[33.6], 
                 TypeSystem`PackageScope`AtomShape[34]}], 
               DirectedInfinity[1], 2, {All, "Position"}], "Direction" -> 
             TypeSystem`PackageScope`AtomShape[56.00000000000001], "Overlap" -> 
             TypeSystem`PackageScope`AtomShape[33.6]|>], 
           DirectedInfinity[1], 4, {All}]]], 14, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Struct[{"Bingo", "Position", "Direction", "Overlap"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Tuple[{
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer]}], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 14], "Path" -> {}, "DisplayedRowCount" -> 
     14, "DisplayedColumnCount" -> 4, "DataRowCount" -> 14, "DataColumnCount" -> 
     4, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  RGBColor[
                  0.6000839236379029, 0.6000839236379029, 0.6000839236379029], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Bingo", 
                  Style[
                  "Bingo", FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Bingo"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Bingo"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Position", 
                  Style[
                  "Position", FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Position"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Position"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Center, Baseline}], SpanFromLeft, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Direction", 
                  Style[
                  "Direction", FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Direction"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Direction"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Overlap", 
                  Style[
                  "Overlap", FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Overlap"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Overlap"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["SHRIKES", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["H", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Right", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Style["\[LongDash]", 
               RGBColor[
               0.750103759318626, 0.750103759318626, 0.750103759318626]], 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["2"], 
                  Style[
                   RawBoxes["2"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[2]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["HOWLBACK", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["K", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[2], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["3"], 
                  Style[
                   RawBoxes["3"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[3]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["INPOURED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["H", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["I", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[3], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["4"], 
                  Style[
                   RawBoxes["4"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[4]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ROBOTICS", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["S", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[4], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["5"], 
                  Style[
                   RawBoxes["5"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[5]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["QUINONES", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["S", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[5], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["6"], 
                  Style[
                   RawBoxes["6"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[6]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ELYTROID", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["H", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["E", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[6], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["7"], 
                  Style[
                   RawBoxes["7"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[7]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["UNTAXING", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["B", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Right", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["U", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[7], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["8"], 
                  Style[
                   RawBoxes["8"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[8]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["NONLEVEL", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["D", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Right", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[8], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["9"], 
                  Style[
                   RawBoxes["9"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[9]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["HUMIDIFY", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["H", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["H", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[9], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["10"], 
                  Style[
                   RawBoxes["10"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[10]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["NARTJIES", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Right", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["N", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[10], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["11"], 
                  Style[
                   RawBoxes["11"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[11]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["OVERFEAR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["R", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[11], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["12"], 
                  Style[
                   RawBoxes["12"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[12]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["DIAZEPAM", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["O", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Right", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["D", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[12], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["13"], 
                  Style[
                   RawBoxes["13"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[13]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["SAGGERED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["F", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["S", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[13], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["14"], 
                  Style[
                   RawBoxes["14"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[14]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["SATURATE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["Bingo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["H", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["Position"], 1}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["11"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["Position"], 2}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Down", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["Direction"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["E", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[14], 
                 Key["Overlap"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> 
          RGBColor[0.749003690406716, 0.749003690406716, 0.749003690406716], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       323.2256003856659, {157.6952265414754, 162.2807734585246}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      323.2256003856659, {157.6952265414754, 162.2807734585246}}],
    BaseStyle->{
     LineBreakWithin -> False, 
      LightDarkAutoColorRules -> <|"MarkedColors" -> True|>},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9434278455906906`*^9, 3.9434284592053623`*^9, 
  3.9434285155041733`*^9, 3.9635665288359184`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"bdf4631e-5cdc-7b42-a4c5-e58093d40118"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PerfectScrabbleGameQ", "/@", "store"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"9db816c7-1e80-ff46-a319-ce223b8d60d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"H\"\>", ",", "\<\"N\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"J\"\>", ",", "\<\"P\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"K\"\>", ",", "\<\"X\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"A\"\>", ",", "\<\"Q\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", "\<\"R\"\>", "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", "\<\"J\"\>", "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"A\"\>", ",", "\<\"I\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"B\"\>", ",", "\<\"E\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"G\"\>", ",", "\<\"L\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"E\"\>", ",", "\<\"U\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"O\"\>", ",", "\<\"T\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"A\"\>", ",", "\<\"F\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"E\"\>", ",", "\<\"R\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"A\"\>", ",", "\<\"O\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"I\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", "\<\"R\"\>", "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", "\<\"J\"\>", "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"H\"\>", ",", "\<\"R\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"A\"\>", ",", "\<\"J\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"O\"\>", ",", "\<\"S\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"E\"\>", ",", "\<\"P\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"R\"\>", ",", "\<\"R\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"E\"\>", ",", "\<\"W\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"I\"\>", ",", "\<\"S\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"N\"\>", ",", "\<\"Z\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"G\"\>", ",", "\<\"S\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"T\"\>", ",", "\<\"Y\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"L\"\>", ",", "\<\"Z\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"E\"\>", ",", "\<\"I\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"W\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", "\<\"E\"\>", "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"C\"\>", ",", "\<\"R\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"J\"\>", ",", "\<\"O\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"B\"\>", ",", "\<\"R\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"E\"\>", ",", "\<\"F\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"True", ",", 
     TagBox[GridBox[{
        {"\<\"Blanks:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"M\"\>", ",", "\<\"M\"\>"}], "}"}]},
        {"\<\" Leftovers:\"\>", 
         RowBox[{"{", 
          RowBox[{"\<\"H\"\>", ",", "\<\"Q\"\>"}], "}"}]}
       },
       AutoDelete->False,
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9434285713787365`*^9, 3.9635665429590034`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"c4c21702-dc70-294c-ac0d-304d1063f26f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["To Do", "Subtitle",
 CellChangeTimes->{{3.9434240907376347`*^9, 
  3.9434240919210796`*^9}},ExpressionUUID->"42cf8020-fff5-a049-bd26-\
d04583a01845"],

Cell["Function for inserting a blank at position X", "Item",
 CellChangeTimes->{{3.9434240945246696`*^9, 
  3.943424124315796*^9}},ExpressionUUID->"e0af3685-4a9d-ee40-9db2-\
9b0049979c66"],

Cell["\<\
Function for generating Epilog and Tiles state to be animated.\
\>", "Item",
 CellChangeTimes->{{3.9434240945246696`*^9, 
  3.9434241790990143`*^9}},ExpressionUUID->"cae2e6aa-b8e5-1747-9a0e-\
517ccd3ffcc3"]
}, Open  ]]
},
WindowSize->{1140, 645},
WindowMargins->{{Automatic, -1224}, {Automatic, -53.25}},
Magnification:>0.8 Inherited,
FrontEndVersion->"14.3 for Microsoft Windows (64-bit) (July 8, 2025)",
StyleDefinitions->"Chatbook.nb",
ExpressionUUID->"da0ccef9-0db0-a44d-828d-8ac7d5ab739a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[554, 20, 336, 6, 37, "Input",ExpressionUUID->"c0a6827c-e0b2-4741-989f-68f86240c026"],
Cell[CellGroupData[{
Cell[915, 30, 220, 4, 42, "Subsection",ExpressionUUID->"cc15eb46-193e-b04d-a4d4-3dc1fe725c6b"],
Cell[1138, 36, 216, 5, 22, "Input",ExpressionUUID->"0403f5d4-887d-ba46-afef-59de7e591bfc"],
Cell[CellGroupData[{
Cell[1379, 45, 737, 15, 83, "Input",ExpressionUUID->"3a491659-c889-8142-ab4d-3a1c30eaced4"],
Cell[2119, 62, 31430, 930, 301, "Output",ExpressionUUID->"f00544a4-d398-ce4d-962b-1a19b25b93bb"],
Cell[33552, 994, 624, 16, 36, "Output",ExpressionUUID->"087c2c2d-017f-2442-bb7f-95fb25817cea"],
Cell[34179, 1012, 92693, 1833, 333, "Output",ExpressionUUID->"bdf4631e-5cdc-7b42-a4c5-e58093d40118"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126909, 2850, 152, 2, 22, "Input",ExpressionUUID->"9db816c7-1e80-ff46-a319-ce223b8d60d1"],
Cell[127064, 2854, 8289, 246, 121, "Output",ExpressionUUID->"c4c21702-dc70-294c-ac0d-304d1063f26f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[135402, 3106, 155, 3, 41, "Subtitle",ExpressionUUID->"42cf8020-fff5-a049-bd26-d04583a01845"],
Cell[135560, 3111, 188, 3, 24, "Item",ExpressionUUID->"e0af3685-4a9d-ee40-9db2-9b0049979c66"],
Cell[135751, 3116, 216, 5, 24, "Item",ExpressionUUID->"cae2e6aa-b8e5-1747-9a0e-517ccd3ffcc3"]
}, Open  ]]
}
]
*)

